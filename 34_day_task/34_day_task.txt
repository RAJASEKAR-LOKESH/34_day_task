CREATE DATABASE GUVIZEN;
CREATE TABLE STUDENT (
    student_id INT PRIMARY KEY,
    student_name VARCHAR(255) NOT NULL,
    student_email VARCHAR(255) UNIQUE,
    student_phone_no BIGINT,
    student_state VARCHAR(100),
    attendance INT CHECK (attendance BETWEEN 0 AND 100),
    mentor_id int,
    FOREIGN KEY (mentor_id) REFERENCES MENTOR(mentor_id)
);

CREATE TABLE MENTOR (
    mentor_id INT PRIMARY KEY,
    mentor_name VARCHAR(255) NOT NULL,
    mentor_email VARCHAR(255) UNIQUE,
    mentor_phone_no BIGINT,
    course_handled VARCHAR(255),
    FOREIGN KEY (course_handled) REFERENCES COURSE(course_id)
);

CREATE TABLE COURSE (
    course_id INT PRIMARY KEY,
    course_name VARCHAR(255) NOT NULL UNIQUE,
    technology_used VARCHAR(255),
    course_handled_by INT,
    FOREIGN KEY (course_handled_by) REFERENCES MENTOR(mentor_id)
);

CREATE TABLE MARKS (
    codekata_marks INT CHECK (codekata_marks BETWEEN 0 AND 100),
    webkata_marks INT CHECK (webkata_marks BETWEEN 0 AND 100),
    task_marks INT PRIMARY KEY CHECK (task_marks BETWEEN 0 AND 100),
    capstone_score INT CHECK (capstone_score BETWEEN 0 AND 10),
    student_id INT,
    FOREIGN KEY (student_id) REFERENCES STUDENT(student_id)
);

CREATE TABLE TASK (
    task_id INT PRIMARY KEY,
    task_name VARCHAR(255) NOT NULL,
    task_description TEXT,
    task_url VARCHAR(255) CHECK (task_url LIKE 'http%'),
    assigned_student_id INT,
    FOREIGN KEY (assigned_student_id) REFERENCES STUDENT(student_id)
);

CREATE TABLE TASK_SUBMISSION (
    task_id INT,
    student_id INT,
    course_id INT,
    total_task_assigned INT CHECK (total_task_assigned > 0),
    submitted_task INT CHECK (submitted_task >= 0),
    pending_task INT CHECK (pending_task >= 0),
    PRIMARY KEY (task_id, student_id),
    FOREIGN KEY (task_id) REFERENCES TASK(task_id),
    FOREIGN KEY (student_id) REFERENCES STUDENT(student_id),
    FOREIGN KEY (course_id) REFERENCES COURSE(course_id)
);

CREATE TABLE CAPSTONE (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL,
    project_description TEXT,
    capstone_url VARCHAR(255) CHECK (capstone_url LIKE 'http%')
);

CREATE TABLE PLACEMENT (
    student_id INT PRIMARY KEY,
    student_name VARCHAR(255) NOT NULL,
    task_marks INT,
    capstone_score INT,
    eligibility AS (
        CASE 
            WHEN task_marks >= 75 AND capstone_score >= 5 THEN 'Yes'
            ELSE 'No'
        END
    ) STORED,
    FOREIGN KEY (student_id) REFERENCES STUDENT(student_id)
);

INSERT INTO STUDENT (student_id, student_name, student_email, student_phone_no, student_state, attendance, mentor_id)
VALUES 
    (1, 'Raj', 'raj@gmail.com', 9874563210, 'Tamil Nadu', 92, 1),   
    (2, 'Srinivas', 'srinivas@gmail.com', 7894561234, 'Andhra Pradesh', 88, 2),   
    (3, 'Murali', 'murali@gmail.com', 8561237890, 'Kerala', 76, 3),   
    (4, 'Gowtham', 'gowtham.v@gmail.com', 9638527410, 'Tamil Nadu', 82, 4),   
    (5, 'Pusparaj', 'pusparaj.k@gmail.com', 8456321796, 'Karnataka', 70, 1),
     (6, 'Anjali', 'anjali25@gmail.com', 9123456789, 'Maharashtra', 95, 1),  
    (7, 'Rahul', 'rahul@gmail.com', 9988776655, 'Gujarat', 90, 2),         
    (8, 'Deepa', 'deepa@gmail.com', 8765432109, 'Karnataka', 85, 3),         
    (9, 'Nikhil', 'nikhil@gmail.com', 1234567890, 'Tamil Nadu', 78, 4),  
    (10, 'Priya', 'priyah@gmail.com', 4567891230, 'Delhi', 88, 1);       

INSERT INTO MENTOR (mentor_id, mentor_name, mentor_email, mentor_phone_no, course_handled)
VALUES 
    (1, 'Poonam', 'poonam@gmail.com', 7894561230, 'Full Stack Development'),
    (2, 'Karthik', 'karthik.i@gmail.com', 9854632170, 'Data Science'),
    (3, 'Ramya P', 'ramya.p@gmail.com', 8741325690, 'Machine Learning'),
    (4, 'Logesh A', 'logesh.A@gmail.com', 7789456123, 'Python Programming'),
     (5, 'Sita ', 'sita.rao@gmail.com', 7896543210, 'Cloud Computing'),
    (6, 'Amit', 'amit.v@gmail.com', 9632587410, 'Cyber Security');


INSERT INTO COURSE (course_id, course_name, technology_used, course_handled_by)
VALUES 
    (1, 'Full Stack Development', 'MERN Stack', 1),
    (2, 'Data Science', 'Machine Learning', 2),
    (3, 'Python Programming', 'Python', 4),
    (4, 'Machine Learning', 'Artificial Intelligence', 3),
    (5, 'Cloud Computing', 'AWS, Azure', 5),
    (6, 'Cyber Security', 'Ethical Hacking', 6),
    (7, 'Data Analysis', 'Python, R', 2),  
    (8, 'Mobile App Development', 'Flutter', 1);  


INSERT INTO MARKS (codekata_marks, webkata_marks, task_marks, capstone_score, student_id)
VALUES 
   (70, 80, 90, 8, 1),   
    (60, 70, 80, 7, 2),   
    (50, 60, 75, 6, 3),   
    (55, 65, 70, 5, 4),   
    (40, 50, 60, 4, 5),   
    (85, 90, 95, 9, 6),   
    (75, 80, 85, 8, 7),   
    (65, 70, 72, 5, 8),   
    (30, 40, 50, 4, 9),   
    (95, 90, 88, 9, 10);    

INSERT INTO TASK (task_id, task_name, task_description, task_url, assigned_student_id)
VALUES 
    (1, 'Build a Web Page', 'Create a responsive web page using HTML and CSS', 'http://example.com/webpage', 1),
    (2, 'Data Cleaning Task', 'Clean and preprocess a dataset in Python', 'http://example.com/datacleaning', 2),
    (3, 'Linear Regression Model', 'Implement a linear regression model', 'http://example.com/linearregression', 3),
     (4, 'API Development', 'Create a REST API using Node.js', 1),
    (5, 'Data Visualization Task', 'Visualize data using Matplotlib', 2),
    (6, 'Model Evaluation', 'Evaluate machine learning models', 3),
    (7, 'Web Application', 'Develop a full-stack web application', 4),
    (8, 'Cloud Deployment', 'Deploy an application on AWS', 5),
    (9, 'Network Security Assessment', 'Assess the security of a network', 6),
    (10, 'Data Analysis Project', 'Perform data analysis on a dataset', 7),
    (11, 'Mobile App Design', 'Design a mobile application interface', 8),
    (12, 'Code Review', 'Conduct a code review for a project', 9),
    (13, 'Research Presentation', 'Prepare a research presentation', 10);

INSERT INTO TASK_SUBMISSION (task_id, student_id, course_id, total_task_assigned, submitted_task, pending_task)
VALUES 
     (1, 1, 1, 10, 10, 0),   
    (2, 2, 2, 8, 6, 2),    
    (3, 3, 4, 6, 5, 1),     
    (4, 4, 3, 5, 4, 1),     
    (5, 5, 5, 4, 2, 2),     
    (6, 6, 6, 3, 3, 0),     
    (7, 7, 7, 5, 4, 1),   
    (8, 8, 8, 4, 3, 1),     
    (9, 9, 1, 6, 2, 4),     
    (10, 10, 2, 3, 1, 2);   

INSERT INTO CAPSTONE (project_id, project_name, project_description, capstone_url)
VALUES 
    (1, 'E-commerce Platform', 'Develop a full-featured e-commerce platform', 'http://example.com/ecommerce'),
    (2, 'Health Prediction App', 'Build a health prediction app using ML', 'http://example.com/healthapp'),
    (3, 'Social Media App', 'Create a social media application', 'http://example.com/socialmedia'),
    (4, 'Online Learning Portal', 'Develop an online learning management system', 'http://example.com/learningportal'),
    (5, 'Fitness Tracker', 'Build a fitness tracking application', 'http://example.com/fitnesstracker'),
    (6, 'Travel Booking System', 'Create a travel booking platform', 'http://example.com/travelbooking'),
    (7, 'Data Analytics Dashboard', 'Develop a dashboard for data analytics', 'http://example.com/analyticsdashboard'),
    (8, 'Real Estate Management', 'Create a platform for real estate management', 'http://example.com/realestate'),
    (9, 'Event Management App', 'Develop an event management application', 'http://example.com/eventmanagement'),
    (10, 'Personal Finance Tracker', 'Build a personal finance tracking tool', 'http://example.com/financetracker');

INSERT INTO PLACEMENT (student_id, student_name, task_marks, capstone_score)
VALUES 
    (1, 'Raj', 90, 8),      -- Eligibility will be 'Yes'
    (2, 'Srinivas', 80, 7),  -- Eligibility will be 'Yes'
    (3, 'Murali', 75, 6),  -- Eligibility will be 'Yes'
    (4, 'Gowtham', 70, 5),       -- Eligibility will be 'No'
    (5, 'Pusparaj', 60, 4),        -- Eligibility will be 'No'
    (6, 'Anjali', 95, 9),    -- Eligibility will be 'Yes'
    (7, 'Rahul', 85, 8),     -- Eligibility will be 'Yes'
    (8, 'Deepa', 72, 5),      -- Eligibility will be 'Yes'
    (9, 'Nikhil', 50, 4),   -- Eligibility will be 'No'
    (10, 'Priya', 88, 9);     -- Eligibility will be 'Yes'

SELECT * FROM PLACEMENT;
